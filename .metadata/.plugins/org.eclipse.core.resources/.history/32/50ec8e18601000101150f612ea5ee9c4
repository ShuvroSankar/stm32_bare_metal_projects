#include <stm32f4xx.h>

#define GPIOAEN				(1U<<0)
#define APB1ENR_TIM2EN		(1U<<0)
#define TIMx_CR1_CEN		(1U<<0)
#define TIMx_CCER_CC1E		(1U<<0)
#define GPIOx_AFRL_TIM		(1U<<20)
#define TIMx_CCMR1_OC1M		((1U<<4) | (1U<<5))

void tim2_pa5_output_compare(void){
//	enable clock access to pa5
	RCC->AHB1ENR |= GPIOAEN;
//	set pa5 to alternate mode
	GPIOA->MODER &=~(1U<<10);
	GPIOA->MODER |= (1U<<11);
//	set pa5 alt func type to TIM2_CH1
	GPIOA->AFR[0] |= GPIOx_AFRL_TIM;
//	enable clock acces to tim2
	RCC->APB1ENR |= APB1ENR_TIM2EN;
//	set prescaler value
	TIM2->PSC  = 16000-1; // 16000000/1600 = 10000
//	set auto reload value
	TIM2->ARR = 1000-1;
//  set output compare toggle mode
	TIM2->CCMR1 |= TIMx_CCMR1_OC1M;
//	clear data
	TIM2->CNT = 0;
//	enable timer
	TIM2->CR1 |= TIMx_CR1_CEN;

}


void tim2_1hz_init(void){
//	enable clock acces to tim2
	RCC->APB1ENR |= APB1ENR_TIM2EN;
//	set prescaler value
	TIM2->PSC  = 16000-1; // 16000000/1600 = 10000
//	set auto reload value
	TIM2->ARR = 1000-1;
//	clear data
	TIM2->CNT = 0;
//	enable timer
	TIM2->CR1 |= TIMx_CR1_CEN;

}
